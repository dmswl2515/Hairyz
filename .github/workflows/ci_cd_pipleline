name: CI/CD Pipeline

on:
  push:
    branches:
      - main  

jobs:
  # 빌드 및 테스트
  build_and_test:
    runs-on: ubuntu-latest  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and run tests
        run: |
          ./gradlew build  

  # 배포 (CD)
  deploy:
    runs-on: ubuntu-latest 
    needs: build_and_test  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Decode and save private key
        run: |
          echo "${{ secrets.AWS_SSH_KEY }}" | base64 -d > /tmp/private_key.pem
          chmod 600 /tmp/private_key.pem
  

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}  # GitHub Secrets에 저장된 AWS 액세스 키
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # GitHub Secrets에 저장된 AWS 비밀 키
          SPRING_DATASOURCE_URL: 'jdbc:oracle:thin:@${{ secrets.AWS_DB_ADDRESS }}:1521:xe'  # EC2 Elastic IP
          SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
        run: |
          # 배포할 파일을 EC2로 복사
          scp -i /tmp/private_key.pem ./build/libs/Hairyz.war ec2-user@${{ secrets.AWS_WEB_ADDRESS }}:/home/ec2-user/apache-tomcat-10.1.31/webapps/
    
          # 배포 후 EC2에서 서비스 재시작
          ssh -i /tmp/private_key.pem ec2-user@${{ secrets.AWS_WEB_ADDRESS }} 'sudo systemctl restart Hairyz'

